@charset "UTF-8";*{box-sizing:border-box;margin:0;padding:0}body{font-size:18px;font-family:PT Sans,sans-serif;color:#3d3d3d}img{max-width:100%;height:auto}abbr{text-decoration:none}h1,h2,h3{font-weight:200;line-height:1}p:not(:last-child){margin-bottom:10px}a{color:#3d3d3d;opacity:.7;text-decoration:none;transition:opacity .2s}a:focus,a:hover{opacity:1}[class*=" icon-"]:before,[class^=icon-]:before{display:block}.main-title{font-family:Expletus Sans,cursive;font-weight:500}.main-subtitle{margin-bottom:20px}.section-title{margin-bottom:10px}.social-links{display:flex}.social-links a{text-decoration:none;display:block;padding:0 5px}.contact-list{margin:20px 0}.contact-list .phone{opacity:.7}dl{margin-top:15px}dl dt{margin-bottom:10px}.small{opacity:.7;font-size:90%}.least-highlight{text-decoration:line-through}@font-face{font-family:erosilva-icons;font-style:normal;font-weight:400;src:url(../fonts/erosilva-icons.eot),url(../fonts/erosilva-icons.eot?#iefix&) format("embedded-opentype"),url(../fonts/erosilva-icons.woff?) format("woff"),url(../fonts/erosilva-icons.ttf?) format("truetype"),url(../fonts/erosilva-icons.woff2?) format("woff2"),url(../fonts/erosilva-icons.svg#erosilva-icons?) format("svg")}.icon{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:erosilva-icons;font-style:normal;font-variant:normal;font-weight:400;line-height:1;speak:none;text-transform:none}.icon.icon-facebook:before{content:""}.icon.icon-github:before{content:""}.icon.icon-linkedin:before{content:""}.icon.icon-twitter:before{content:""}.icon-triangle:before{border-color:transparent transparent #bbb;border-style:solid;border-width:0 5px 5px;content:"";display:inline-block;height:0;width:0}.contact-list,.gallery-list,.social-links{list-style:none}.gallery-list a{position:relative;height:0;overflow:hidden}.gallery-list a>canvas,.gallery-list a>iframe,.gallery-list a>img{position:absolute;max-width:none;width:101%}.gallery-list a>canvas,.gallery-list a>img{top:50%;left:50%;bottom:0;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}.container{max-width:960px;margin-left:auto;margin-right:auto}.main-header{color:#3d3d3d;text-align:center}.main-header .social-links{display:inline-flex;font-size:1.22222em}.main-header .social-links a{color:inherit}.main-content{background:#fff;padding-bottom:1px;margin-bottom:115px;padding-left:30px;padding-right:30px}.main-footer{position:fixed;bottom:0;left:0;right:0;padding:40px 20px 30px;background:#3d3d3d;color:#fff;font-size:.88889em;text-align:center;box-shadow:inset 0 15px 30px rgba(0,0,0,.2);z-index:-1}.main-footer .social-links{justify-content:center;margin-top:10px}.main-footer .social-links a{color:#fff;font-size:1.11111em}.main-footer p{margin:0}.main-footer p a{color:#fff;opacity:1}.main-footer p a:focus,.main-footer p a:hover{text-decoration:underline}.gallery-list a{display:block;background:#bdbdbd;padding-bottom:46.66667%;box-shadow:0 0 0 1px rgba(0,0,0,.1);transition:.2s}.gallery-list a:not(:hover):not(:focus){opacity:.3;-webkit-filter:grayscale(50%);filter:grayscale(50%)}.sections{margin:60px 0}.sections ul{list-style-position:inside}.section-projects{margin-bottom:80px}@media (min-width:768px){.main-title{font-size:4em}.main-subtitle{font-size:2.88889em;padding-left:46px}.main-description{font-size:1.44444em}.section-title{font-size:2.33333em}.main-header{padding:80px 0 40px}.gallery-list{display:flex;flex-wrap:wrap;justify-content:center}.gallery-list li{width:25%}.gallery-list li:first-child{margin-left:25%}.gallery-list li:nth-child(2){margin-right:25%}}@media (max-width:767px){.main-title{font-size:2.55556em}.main-subtitle{font-size:1.55556em;padding-left:30px}.main-description{font-size:1em}.section-title{font-size:1.44444em}.main-header{padding:60px 0 30px}.gallery-list{overflow-x:auto;overflow-y:hidden;white-space:nowrap;box-shadow:0 15px 15px -5px rgba(0,0,0,.1)}.gallery-list li{display:inline-block;width:100%}.gallery-list a:not(:hover):not(:focus){opacity:1;-webkit-filter:grayscale(0);filter:grayscale(0)}}@media print{body{font-size:14px!important}.hidden-print,.main-footer,.main-subtitle,.section-projects,.social-links{display:none!important}.main-content,.main-description{margin:0!important}.contact-list{margin-top:5px;margin-bottom:10px}.contact-list .mail a,.contact-list .phone{opacity:1!important}.main-header{margin-top:0!important;margin-bottom:30px!important;padding-bottom:15px!important;border-bottom:1px solid rgba(0,0,0,.1)!important}.main-title{font-size:1.33333em!important;font-weight:700!important}.main-description{font-size:1.11111em!important}.sections{margin:25px 0!important}.section-reading{margin-bottom:0!important}.section-title{font-size:1em!important;font-weight:700!important}[data-print]{color:transparent!important}[data-print]:before{font-family:PT Sans,sans-serif;content:attr(data-print);color:#3d3d3d}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
